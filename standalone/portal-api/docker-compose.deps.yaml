version: '3'

services:
  postgres:
    image: postgres:14.2
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - ./.data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  maildev:
    build:
      context: .
      dockerfile: Dockerfile.maildev
    ports:
      - ${MAIL_CLIENT_PORT}:1080
      - ${MAIL_PORT}:1025

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  # mongodb:
  #   image : mongo:5.0.15
  #   container_name: mongodb
  #   hostname: mongodb
  #   restart: on-failure
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - MONGO_INITDB_ROOT_USERNAME=mongo
  #     - MONGO_INITDB_ROOT_PASSWORD=mongo
  #     - MONGO_INITDB_DATABASE=my-service
  #     - MONGO_REPLICA_SET_NAME=rs0
  #   volumes:
  #     - mongodb5_data:/data/db
  #     - ./:/opt/keyfile/
  #   ports:
  #     - 27017:27017
  #   healthcheck:
  #     test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
  #     interval: 10s
  #     start_period: 30s
  #   # command: "--bind_ip_all --keyFile /opt/keyfile/keyfile --replSet rs0"
  #   # command: "--bind_ip_all --replSet rs0"
  mongodb:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    depends_on:
      - postgres
volumes:
  mongodb_data:
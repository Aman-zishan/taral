version: '3.7'
services:
  bitcoin:
    build:
      context: ./provisioning/private-testnet/puppet-chain
    container_name: bitcoin
    restart: on-failure
    ports:
      - "18443:18443"
      - "28443:28443"
      - "28444:28444"
    environment:
      - DYNAMIC_GENESIS_TIMESTAMP=1
      - RUST_BACKTRACE=1
    networks:
      - stacks-blockchain
    
  # bitcoin-explorer:
  #   build:
  #     context: ./provisioning/private-testnet/explorer
  #   depends_on:
  #     - bitcoin
  #   restart: on-failure
  #   ports:
  #     - "8001:8001"
  #   environment:
  #     BTCEXP_BITCOIND_HOST: bitcoin.stacks-blockchain
  #     BTCEXP_BITCOIND_USER: blockstack
  #     BTCEXP_BITCOIND_PASS: blockstacksystem
  #     BTCEXP_BITCOIND_PORT: 28443
  #     BTCEXP_HOST: 0.0.0.0
  #     BTCEXP_PORT: 8001
  #   networks:
  #     - stacks-blockchain

  # Block explorer server
  # electrum:
  #   build:
  #     context: ./provisioning/private-testnet/mempool/electrum
  #   container_name: electrum
  #   depends_on:
  #     - bitcoin
  #   ports:
  #     - 50001:50001
  #     - 30000:30000
  #   volumes:
  #     - ./provisioning/private-testnet/mempool/electrum/config.toml:/etc/electrs/config.toml
  #     - ./provisioning/private-testnet/mempool/electrum/config.toml:/.electrs/config.toml
  #     - ./provisioning/private-testnet/mempool/electrum/config.toml:/electrs.toml
  #     - ./volumes/bitcoin/:/config
  #   restart: unless-stopped
  #   networks:
  #     - stacks-blockchain

  # web:
  #   build:
  #     context: ./provisioning/private-testnet/mempool/frontend
  #   user: "1000:1000"
  #   restart: on-failure
  #   stop_grace_period: 1m
  #   command: "./wait-for db:3306 --timeout=720 -- nginx -g 'daemon off;'"
  #   ports:
  #     - "8083:80"
  #   environment:
  #     FRONTEND_HTTP_PORT: "8083"
  #     BACKEND_MAINNET_HTTP_HOST: "api"
  #   networks:
  #     - stacks-blockchain
      
  # api:
  #   build:
  #     context: ./provisioning/private-testnet/mempool/backend
  #   user: "1000:1000"
  #   restart: on-failure
  #   stop_grace_period: 1m
  #   command: "./wait-for-it.sh db:3306 --timeout=720 --strict -- ./start.sh"
  #   volumes:
  #     - ./data:/backend/cache
  #   environment:
  #     RPC_HOST: "bitcoin"
  #     RPC_PORT: "18443"
  #     RPC_USER: "blockstack"
  #     RPC_PASS: "blockstacksystem"
  #     ELECTRUM_HOST: "electrum"
  #     ELECTRUM_PORT: "50001"
  #     ELECTRUM_TLS: "false"
  #     MYSQL_HOST: "db"
  #     MYSQL_PORT: "3306"
  #     MYSQL_DATABASE: "mempool"
  #     MYSQL_USER: "mempool"
  #     MYSQL_PASS: "mempool"
  #     BACKEND_MAINNET_HTTP_PORT: "8999"
  #     CACHE_DIR: "/backend/cache"
  #     MEMPOOL_CLEAR_PROTECTION_MINUTES: "20"
  #   networks:
  #     - stacks-blockchain

  # db:
  #   image: mariadb:10.5.8
  #   user: "1000:1000"
  #   restart: on-failure
  #   stop_grace_period: 1m
  #   volumes:
  #     - ./provisioning/private-testnet/mempool/mysql/data:/var/lib/mysql
  #     - ./provisioning/private-testnet/mempool/mysql/script:/docker-entrypoint-initdb.d
  #   environment:
  #     MYSQL_DATABASE: "mempool"
  #     MYSQL_USER: "mempool"
  #     MYSQL_PASSWORD: "mempool"
  #     MYSQL_ROOT_PASSWORD: "admin"
  #   networks:
  #     - stacks-blockchain

  # bitcore:
  #   build:
  #     context: ./provisioning/bitcore
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8100:8100
  #     - 3002:3000
  #   environment:
  #     - DB_HOST=db
  #     - DB_NAME=bitcore-test
  #     - BITCORE_CONFIG_PATH=/bitcore/bitcore.config.json
  #   volumes:
  #     - ./provisioning/bitcore/config.json:/bitcore/bitcore.config.json
  #   depends_on:
  #     - db
  #     - bitcoin
  #   networks:
  #     - stacks-blockchain
  #   command: "npm run node"
  # db:
  #   image: mongo
  #   networks:
  #     - stacks-blockchain

  bitcoind-fill-faucet:
    build:
      context: ./provisioning/private-testnet/fill-faucet
    depends_on:
      - bitcoin
    restart: on-failure
    environment:
      WAIT_HOST_CONNECT_TIMEOUT: 6
      WAIT_BEFORE: 5
      WAIT_HOSTS: bitcoin:18443
      WAIT_AFTER: 5
      WAIT_SLEEP_INTERVAL: 1
    networks:
      - stacks-blockchain

  postgres:
    container_name: postgres
    image: "postgres:12.2"
    ports:
      - "5490:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stacks_blockchain_api
      POSTGRES_PORT: 5432
    networks:
      - stacks-blockchain

  explorer:
    image: blockstack/explorer:1.13
    container_name: explorer
    environment:
      - NEXT_PUBLIC_MAINNET_API_SERVER=http://stacks-blockchain-api.stacks-blockchain:3999
      - TESTNET_API_SERVER=http://stacks-blockchain-api.stacks-blockchain:3999
      - MOCKNET_API_SERVER=http://stacks-blockchain-api.stacks-blockchain:3999
      - NODE_ENV=production
      - HOME=/root
      - TERM=xterm
      - SHLVL=1
    ports:
      - 3000:3000
    depends_on: 
      - stacks-blockchain-api
    networks:
      - stacks-blockchain

  stacks-blockchain:
      build:
        context: ./provisioning/private-testnet/stacks-blockchain
      restart: on-failure
      environment:
        STACKS_EVENT_OBSERVER: stacks-blockchain-api:3700
        XBLOCKSTACK_DEBUG: 1
        RUST_BACKTRACE: 1
        WAIT_HOST_CONNECT_TIMEOUT: 6
        WAIT_BEFORE: 5
        WAIT_HOSTS: bitcoin:18443
        WAIT_AFTER: 5
        WAIT_SLEEP_INTERVAL: 1
      ports:
        - "20443:20443"
        - "20444:20444"
      depends_on:
        - stacks-blockchain-api
      networks:
        - stacks-blockchain

  stacks-blockchain-api:
    container_name: stacks-blockchain-api
    image: blockstack/stacks-blockchain-api:latest
    restart: on-failure
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DATABASE: stacks_blockchain_api
      STACKS_CORE_EVENT_PORT: 3700
      STACKS_CORE_EVENT_HOST: http://0.0.0.0
      STACKS_BLOCKCHAIN_API_PORT: 3999
      STACKS_BLOCKCHAIN_API_HOST: 0.0.0.0
      STACKS_BLOCKCHAIN_API_DB: pg
      STACKS_CORE_RPC_HOST: stacks-blockchain
      STACKS_CORE_RPC_PORT: 20443
      NODE_ENV: production
      STACKS_CHAIN_ID: 2147483648
      BTC_RPC_HOST: http://bitcoin
      BTC_RPC_PORT: 18443
      BTC_RPC_USER: blockstack
      BTC_RPC_PW: blockstacksystem
      BTC_FAUCET_PK: 29c028009a8331358adcc61bb6397377c995d327ac0343ed8e8f1d4d3ef85c27
      # BNS_IMPORT_DIR: /bns-data
    ports:
      - "3999:3999"
      - "9153:9153"
    volumes:
      - ./provisioning/private-testnet/bns-data:/bns-data
    depends_on: 
      - postgres
    networks:
      - stacks-blockchain

networks:
  stacks-blockchain:
    driver: bridge
    name: stacks-blockchain
